name: Build and Upload Artifact

on:
  workflow_dispatch: null

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # macOS arm64
            cmake-args: "-DFFMPEG_DOWNLOAD=ON"
            archive: loud-darwin-arm64.tar.gz

          - platform: "macos-latest" # macOS x86-64
            cmake-args: '-DFFMPEG_DOWNLOAD=ON -DCMAKE_OSX_ARCHITECTURES="x86_64" -DCMAKE_SYSTEM_NAME=Darwin"'
            archive: loud-darwin-x86-64.tar.gz

          - platform: "ubuntu-22.04" # Linux x86-64
            cmake-args: "-DFFMPEG_DOWNLOAD=ON"
            archive: loud-linux.tar.gz
          - platform: "windows-latest" # Windows x86_64
            cmake-args: "-DGGML_VULKAN=ON -DFFMPEG_DOWNLOAD=ON"
            archive: loud-windows.zip
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Used for getting git tag
          fetch-depth: 0

      - name: Prepare Vulkan SDK (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y libvulkan1
        if: contains(matrix.platform, 'ubuntu')

      - name: Prepare Vulkan SDK (Windows)
        run: |
          C:\msys64\usr\bin\wget https://sdk.lunarg.com/sdk/download/1.3.296.0/windows/VulkanSDK-1.3.296.0-Installer.exe
          7z x VulkanSDK-1.3.296.0-Installer.exe -ovulkan-sdk
          echo "VULKAN_SDK=$PWD/vulkan-sdk" >> $env:GITHUB_ENV
          echo "$PWD/vulkan-sdk/Bin" >> $env:GITHUB_PATH
        if: contains(matrix.platform, 'windows')

      - name: Build with CMake and Ninja
        run: |
          cmake -G Ninja -B build . -DCMAKE_BUILD_TYPE=Release -DVERSION="$(git rev-parse --short HEAD)" ${{ matrix.cmake-args }}
          cmake --build build --config Release

      - name: Upload package (Unix)
        run: |
          if [[ "$(uname)" == "Darwin" ]]; then
            codesign --force -s - ./build/bin/*
          fi
          chmod +x ./build/bin/*
          mv build/bin build/loud
          tar -czf build/${{ matrix.archive }} -C build loud
          gh release upload `git describe --tags --abbrev=0` build/${{ matrix.archive }} --clobber
        env:
          GH_TOKEN: ${{ github.token }}
        if: (!contains(matrix.platform, 'windows'))

      - name: Upload package (Windows)
        run: |
          Move-Item build/bin build/loud
          7z a build\${{ matrix.archive }} build\loud
          gh release upload $(git describe --tags --abbrev=0) build/${{ matrix.archive }} --clobber
        env:
          GH_TOKEN: ${{ github.token }}
        if: contains(matrix.platform, 'windows')
